name: Release
description: Create release

inputs:
  python-version:
    description: "Python version."
    required: true

  poetry-version:
    description: "Poetry version."
    required: true

  token:
    description: "GH_TOKEN"
    required: true

  pre-release:
    description: "Create pre-release"
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache
          ~/.local
          venv
        key: python-${{inputs.python-version}}-poetry-${{inputs.poetry-version}}-${{hashFiles('poetry.lock')}}
        restore-keys: python-${{inputs.python-version}}-poetry-${{inputs.poetry-version}}-

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: ${{inputs.python-version}}

    - name: Setup poetry
      if: steps.cache.outputs.cache-hit != 'true'
      uses: wintero92/setup-poetry@v1
      with:
        poetry-version: ${{inputs.poetry-version}}

    - name: Setup venv
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        python -m venv venv

    - name: Install package
      shell: bash
      run: |
        source venv/bin/activate
        poetry install

    - name: Publish release
      if: ${{inputs.pre-release}} == 'false'
      shell: bash
      env:
        GH_TOKEN: ${{inputs.token}}
      run: |
        source venv/bin/activate
        git config user.name github-actions
        git config user.email github-actions@github.com
        semantic-release publish -v DEBUG

    - name: Publish pre-release
      if: ${{inputs.pre-release}} == 'true'
      shell: bash
      env:
        GH_TOKEN: ${{inputs.token}}
      run: |
        source venv/bin/activate
        git config user.name github-actions
        git config user.email github-actions@github.com
        semantic-release publish --prerelease -v DEBUG